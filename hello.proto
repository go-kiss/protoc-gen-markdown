syntax = "proto3";

package demo;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// 服务示例
//
// 服务级的注释都会同步到 markdown 文件
service Demo {
    // 接口示例
    //
    // 接口注释会同步到 markdown 文件的对应位置
    rpc Echo1(Foo) returns (google.protobuf.Empty) {}
    // 接口示例二
    rpc Echo2(google.protobuf.Empty) returns (Foo) {}
}

// 对象级的注释会忽略
message Foo {
    // 布尔值示例
    bool a = 1;
    // 三十二位整数示例
    int32 b = 2;
    // 六十四位整数示例
    int64 c = 3; // 使用 string 保存
    // 浮点数示例
    double d = 4;
    // 字符示例
    string e = 5;
    // 字节序列示例
    bytes f = 6; // 使用 base64 string 保存
    // 对象示例
    Bar g = 7;
    // 导入对象示例
    google.protobuf.Timestamp h = 8;
}

// 对象级的注释会忽略
message Bar {
    // 字符列表示例
    repeated string a = 1;
    // 字典示例
    map<int32,string> b = 2;
    // 递归定义示例
    Baz c = 3;
    enum Sex {
        Unknown = 0;
        Male = 1;
        Female = 2;
    }
    // 枚举示例
    Sex d = 4;
    // 对象列表示例
    repeated Person e = 5;
}

// 对象级的注释会忽略
message Baz {
    Bar a = 1; // 被引用的对象不再展开
}

message Person {
    string name = 1;
    int32 age = 2;
}
